<? namespace Bitrix\Main\Security\W;$GLOBALS['____1238273586']= array(base64_decode('dGlt'.'ZQ=='),base64_decode(''.'d'.'GltZQ='.'='),base64_decode(''.'an'.'Nvb'.'l9k'.'Z'.'WNv'.'ZGU='),base64_decode('YX'.'J'.'yYXlfbWVyZ2U='),base64_decode('am9pbg=='),base64_decode('am9p'.'bg=='),base64_decode(''.'am9pbg=='),base64_decode(''.'YXJy'.'YXlfcG9w'),base64_decode('YXJyYXlfc'.'2hp'.'ZnQ='),base64_decode('YXJ'.'yYXlfc'.'2hp'.'ZnQ='),base64_decode(''.'Y'.'XJy'.'YXlfc2h'.'p'.'ZnQ='),base64_decode('YXJyY'.'Xlf'.'c'.'2hpZnQ='),base64_decode('YXJyYX'.'lfbWVyZ2'.'U='),base64_decode(''.'aX'.'NfYXJy'.'YXk'.'='),base64_decode('Y'.'XJ'.'yYX'.'lf'.'bW'.'V'.'yZ'.'2U='),base64_decode('aW5fYXJy'.'YXk'.'='),base64_decode('aW5fYXJy'.'YXk='),base64_decode(''.'aW5'.'fY'.'XJyYXk='),base64_decode('a'.'W'.'5fYXJyYXk'.'='),base64_decode('a'.'W5fY'.'XJyYXk='),base64_decode('dGltZQ=='),base64_decode('dGl'.'tZQ=='),base64_decode(''.'YXJy'.'YXlfbWFw'),base64_decode('Z2V0X2xvYWRl'.'ZF9l'.'eHRlbnNpb25z'),base64_decode(''.'anNvbl'.'9lbmNv'.'ZGU='),base64_decode('anNvbl9'.'l'.'b'.'mNvZ'.'G'.'U'.'='),base64_decode('cGhwdmVyc2'.'lv'.'bg=='),base64_decode('a'.'nNv'.'bl'.'9lbmNvZGU='),base64_decode('am9pb'.'g=='));if(!function_exists(__NAMESPACE__.'\\___777158073')){function ___777158073($_944481938){static $_534197372= false; if($_534197372 == false) $_534197372=array('V1'.'dBTE'.'xfTE9DSw==','c2'.'Vjd'.'XJ'.'pdHk'.'=','Y2FjaGU=','dH'.'Rs','RE'.'FU'.'QQ'.'==','e'.'yI=','V1d'.'BT'.'E'.'xfTE9DSw==','c2V'.'jdXJp'.'d'.'Hk=','U'.'0VD'.'VVJJVFlfV1dBTExfR'.'VhDRVBUSU9O','R'.'kFJT'.'F9DS'.'EV'.'DS0lORw='.'=','Q2FuIG5vdCBl'.'e'.'G'.'VjdXRl'.'IH'.'d'.'3Y'.'Wx'.'sIHJ1bGVzO'.'iA'.'=',''.'IFRyYWNlOiA=','UkVRVUV'.'TVF9'.'VUkk=','a2V5cw'.'==','dm'.'FsdWVz','U0VD'.'VVJJ'.'VFlfV1dBTEx'.'fTU9ESU'.'ZZ','Lg==','U0VDV'.'VJJVFl'.'fV1dBTE'.'xfVU5T'.'R'.'V'.'Q=','Lg==','U0VD'.'VV'.'J'.'JVFlf'.'V1d'.'B'.'TE'.'xfRVhJVA'.'==','Lg==','Z2xv'.'YmFs','a2V'.'5cw==','dmFsdW'.'V'.'z','Z2V'.'0','Z2V0','cG9zd'.'A==',''.'c'.'G9zdA==','Y29va2'.'ll','Y'.'2'.'9va2ll','cm'.'VxdW'.'Vz'.'dA==','c'.'mVxdWVzdA'.'==','Z2xvYmF'.'s','Z'.'2xvYmFs','bWFpb'.'l9zZWM=',''.'V1dBTE'.'xfQ'.'UNUV'.'UFM'.'SVpF'.'X'.'1J'.'VTE'.'VT','dg==','dmV'.'yc2lvbg==','a'.'Q==','a'.'XN'.'JbnN0YW'.'x'.'sZWQ'.'=','dg='.'=',''.'aW5p','c29ja2V0'.'VGltZW91dA==','c3RyZWFtV'.'GltZW91dA==','KCc=','ZG'.'F0YQ==','JywgJ'.'w==','bW9kdWx'.'l','Jyw'.'gJw==',''.'bW9k'.'dWxlX3'.'Z'.'lc'.'nNp'.'b24=','Jyk=',''.'LCA=',''.'U0VD'.'VVJJVFlfV'.'1'.'dBTEx'.'fR'.'Vh'.'DR'.'V'.'BUS'.'U'.'9O','bW'.'Fp'.'bg==',''.'Rk'.'F'.'J'.'TF9'.'S'.'RUZSR'.'VNISU5H','Q2FuIG5v'.'d'.'C'.'ByZWZyZ'.'X'.'No'.'IHd3'.'YWxsI'.'HJ1b'.'GVzOiA=',''.'I'.'FRy'.'YWNlOiA=','ZGF'.'0YQ'.'==',''.'eyI=',''.'LS0tLS1'.'CR'.'U'.'d'.'J'.'T'.'iBQVU'.'J'.'MSUMgS0VZLS0tL'.'S0=',''.'Ck1JSUJJa'.'k'.'F'.'OQ'.'m'.'dr'.'cWhraU'.'c5dzB'.'CQ'.'VFFRkFB'.'T0NBUThBTUlJ'.'Q'.'kNnS0NBUUVB'.'cThRR'.'TBIam1I'.'S'.'l'.'VT'.'dFdWNm'.'4we'.'m'.'E'.'KU'.'l'.'ZvTHgw'.'Mkt6'.'YmZyYlMvU'.'DZzV2'.'F4VHp3'.'OFNlR1R0'.'YlRDT3'.'J'.'wSGk1U'.'UY2T1J5alovWHh6'.'L0tMVTFH'.'Ym9mOUNaMw'.'o0ejdTa3FVd'.'D'.'Y2aWJYd'.'k9GQn'.'g0Zn'.'cvQVB'.'QUkdE'.'c'.'XRtMG5EM2Z'.'n'.'R3N1'.'M'.'1JlUGd3'.'Mj'.'lp'.'OC'.'t2bT'.'dtdEJLSlVZ'.'bD'.'Ry'.'ClZwYjZ'.'zZlp'.'FV'.'Dl'.'L'.'RWI2VDFI'.'RF'.'ltRXZjMWhxL2lpd'.'X'.'l4'.'T'.'HJaWmk1UTZVZm'.'Y0VUV2'.'VEkrNjhzc0ZSa1E'.'rb'.'3dU'.'UnkKZU9'.'JT'.'WJGaE0vVVRtZl'.'ZZYlRSRnkyb'.'1VROFd'.'N'.'e'.'mEybko1U2Foem'.'kxVUtPMWpBalhUU'.'F'.'Jye'.'mM3Q'.'Wp1Nj'.'M5ajFP'.'MApwcHFmbTV4Z1dsR'.'kFKa0hRVG'.'diZGQ1QVdxREZR'.'a3Q5S'.'E'.'t'.'rW'.'StUbmZ'.'CTEdWTXZ'.'W'.'eVB3VE'.'hOV1FZQXc0eHBnL3dBClp'.'3SUR'.'BUUFCC'.'i0tLS0tRU'.'5E'.'I'.'FB'.'VQkxJQ'.'y'.'BLRVk'.'tLS0'.'t'.'LQ='.'=');return base64_decode($_534197372[$_944481938]);}}; use Bitrix\Main\Application; use Bitrix\Main\Config\Option; use Bitrix\Main\Data\Cache; use Bitrix\Main\ModuleManager; use Bitrix\Main\Security\PublicKeyCipher; use Bitrix\Main\SystemException; use Bitrix\Main\Web\HttpClient; use Bitrix\Main\Web\Json; use Bitrix\Main\Security\W\Rules\Rule; use Bitrix\Main\Security\W\Rules\Results\RuleAction; use Bitrix\Main\Security\W\Rules\Results\RuleResult; use Bitrix\Main\Security\W\Rules\Results\CheckResult; use Bitrix\Main\Security\W\Rules\Results\ModifyResult; use Bitrix\Main\Type\ArrayHelper; use Bitrix\Main\Security\W\Rules\RuleRecordTable; use ReflectionExtension; class WWall{ const CACHE_RULES_TTL= 10800; private static $_1477246518= 'https://wwall.bitrix.info/rules.php'; protected $_1359910566= true; public function handle(){ try{  $_345594440= Cache::createInstance(); $_1955569154= false; if($_345594440->initCache(static::CACHE_RULES_TTL, 'WWALL_LOCK', 'security')){ $_1060656396= $_345594440->getVars(); if($GLOBALS['____1238273586'][0]()- $_1060656396> round(0+6.6666666666667+6.6666666666667+6.6666666666667)){  $_1634554364= Application::getConnection(); $_106766610= RuleRecordTable::getTableName(); $_1634554364->truncateTable($_106766610); RuleRecordTable::cleanCache(); $_345594440->clean(___777158073(0), ___777158073(1));}} elseif($_345594440->startDataCache()){  $_345594440->endDataCache($GLOBALS['____1238273586'][1]()); $_1955569154= true;}  $_1367134497= RuleRecordTable::getList([ ___777158073(2) =>[___777158073(3) => round(0+1800+1800)* round(0+24)* round(0+7)]])->fetchAll(); foreach($_1367134497 as $_1559009691){ $_1094979803= new PublicKeyCipher; $_1941553971= $_1094979803->decrypt($_1559009691[___777158073(4)], static::__1187337427()); if(!str_starts_with($_1941553971, ___777158073(5))){ continue;} $_1881788467= $GLOBALS['____1238273586'][2]($_1941553971, true); if(!empty($_1881788467)){ $_1777376786= Rule::make($_1881788467); $_497988126= $this->handleRule($_1777376786); $this->applyHandlingResults($_497988126);}}  if($_1955569154){ $_345594440->clean(___777158073(6), ___777158073(7));}} catch(\Throwable $_1209041459){ $this->logEvent( ___777158073(8), ___777158073(9), ___777158073(10). $_1209041459->getMessage(). ___777158073(11). $_1209041459->getTraceAsString());}}  public function handleRule(Rule $_1777376786): array{ $_497988126=[]; if($_1777376786->matchPath($_SERVER[___777158073(12)])){  $_1819914109= $this->getContextElements($_1777376786->getContext()); foreach($_1819914109 as $_684826908 => &$_965874969){ $_497988126= $GLOBALS['____1238273586'][3]($_497988126, $this->recursiveContextKeyHandle($_684826908, $_965874969,[], $_1777376786));}} return $_497988126;}  public function applyHandlingResults(array $_497988126){ $_1819914109= $this->getContextElements([ 'get', 'post', 'cookie', 'request', 'global']); foreach($_497988126 as $_605876277){ $_965874969=& $_1819914109[$_605876277->getContextName()]; $_1332946803= $_605876277->getRuleResult(); $_1777376786= $_605876277->getRule(); if($_1332946803 instanceof ModifyResult){ if($_1777376786->getProcess() === ___777158073(13)){  static::rewriteContextKey( $_605876277->getContextName(), $_965874969, $_605876277->getContextKey(), $_1332946803->getCleanValue());} elseif($_1777376786->getProcess() === ___777158073(14)){ static::rewriteContextValue( $_605876277->getContextName(), $_965874969, $_605876277->getContextKey(), $_1332946803->getCleanValue());} $this->logEvent( ___777158073(15), $_605876277->getContextName(), $GLOBALS['____1238273586'][4](___777158073(16), $_605876277->getContextKey()));} elseif($_1332946803 instanceof CheckResult &&!$_1332946803->isSuccess()){ if($_1332946803->getAction() === RuleAction::UNSET){ static::unsetContextValue( $_605876277->getContextName(), $_965874969, $_605876277->getContextKey(),); $this->logEvent( ___777158073(17), $_605876277->getContextName(), $GLOBALS['____1238273586'][5](___777158073(18), $_605876277->getContextKey()));} elseif($_1332946803->getAction() === RuleAction::EXIT){ $this->logEvent( ___777158073(19), $_605876277->getContextName(), $GLOBALS['____1238273586'][6](___777158073(20), $_605876277->getContextKey())); exit;}}}} public function disableEventLogging(){ $this->_1359910566= false;} protected function rewriteContextKey($_684826908, &$_965874969, $_938182349, $_977365684){ $_1954825562= $_938182349;  $GLOBALS['____1238273586'][7]($_1954825562); $_1954825562[]= $_977365684; if($_684826908 === ___777158073(21)){ $_575110656= $GLOBALS['____1238273586'][8]($_938182349); $GLOBALS['____1238273586'][9]($_1954825562); if(empty($_938182349)){ $GLOBALS[$_977365684]= $GLOBALS[$_575110656]; unset($GLOBALS[$_575110656]);} else{ $_965874969=& $GLOBALS[$_575110656]; $_1717042663= ArrayHelper::getByNestedKey($_965874969, $_938182349);  ArrayHelper::setByNestedKey($_965874969, $_1954825562, $_1717042663);  ArrayHelper::unsetByNestedKey($_965874969, $_938182349);}} else{ $_1717042663= ArrayHelper::getByNestedKey($_965874969, $_938182349);  ArrayHelper::setByNestedKey($_965874969, $_1954825562, $_1717042663);  ArrayHelper::unsetByNestedKey($_965874969, $_938182349);}} protected function rewriteContextValue($_684826908, &$_965874969, $_1224656423, $_1717042663){ if($_684826908 === 'global'){ $_575110656= $GLOBALS['____1238273586'][10]($_1224656423); if(empty($_1224656423)){ $GLOBALS[$_575110656]= $_1717042663;} else{ $_965874969=& $GLOBALS[$_575110656]; ArrayHelper::setByNestedKey($_965874969, $_1224656423, $_1717042663);}} else{  ArrayHelper::setByNestedKey($_965874969, $_1224656423, $_1717042663);}} protected function unsetContextValue($_684826908, &$_965874969, $_1224656423){ if($_684826908 === 'global'){ $_575110656= $GLOBALS['____1238273586'][11]($_1224656423); if(empty($_1224656423)){ unset($GLOBALS[$_575110656]);} else{ $_965874969=& $GLOBALS[$_575110656]; ArrayHelper::unsetByNestedKey($_965874969, $_1224656423);}} else{ ArrayHelper::unsetByNestedKey($_965874969, $_1224656423);}}  protected function recursiveContextKeyHandle(string $_684826908, array &$_965874969, array $_1989139163, Rule $_1777376786): array{  $_497988126=[]; foreach($_965874969 as $_1511834658 => $_1717042663){ $_1224656423= $GLOBALS['____1238273586'][12]($_1989139163,[$_1511834658]); if($_1777376786->matchKey($_1224656423)){  if($_1777376786->getProcess() === ___777158073(22)){ $_1332946803= $_1777376786->evaluate($_1511834658);} elseif($_1777376786->getProcess() === ___777158073(23)){ $_1332946803= $_1777376786->evaluateValue($_1717042663);}  if(!empty($_1332946803) && $_1332946803 instanceof RuleResult){ $_497988126[]= new HandlingResult($_684826908, $_1224656423, $_1332946803, $_1777376786);}}  if($GLOBALS['____1238273586'][13]($_1717042663)){ $_497988126= $GLOBALS['____1238273586'][14]($_497988126, $this->recursiveContextKeyHandle( $_684826908, $_965874969[$_1511834658], $_1224656423, $_1777376786));}} return $_497988126;} protected function getContextElements(array $_886219931){ $_12849420=[]; if($GLOBALS['____1238273586'][15](___777158073(24), $_886219931, true)){ $_12849420[___777158073(25)]= &$_GET;} if($GLOBALS['____1238273586'][16](___777158073(26), $_886219931, true)){ $_12849420[___777158073(27)]= &$_POST;} if($GLOBALS['____1238273586'][17](___777158073(28), $_886219931, true)){ $_12849420[___777158073(29)]= &$_COOKIE;} if($GLOBALS['____1238273586'][18](___777158073(30), $_886219931, true)){ $_12849420[___777158073(31)]= &$_REQUEST;} if($GLOBALS['____1238273586'][19](___777158073(32), $_886219931, true)){ $_12849420[___777158073(33)]= $GLOBALS;} return $_12849420;} public static function refreshRules(){ try{ $_481725886= Option::get('main_sec', 'WWALL_ACTUALIZE_RULES', 0); if(($GLOBALS['____1238273586'][20]()- $_481725886)< static::CACHE_RULES_TTL){ return;} Option::set(___777158073(34), ___777158073(35), $GLOBALS['____1238273586'][21]()); $_624431730= null;  $_1080818132= $GLOBALS['____1238273586'][22](function($_1441949513){ return[___777158073(36) => $_1441949513[___777158073(37)], ___777158073(38) => (int) $_1441949513[___777158073(39)]];}, ModuleManager::getModulesFromDisk());  $_1422023511=[]; foreach($GLOBALS['____1238273586'][23]() as $_2095018131){ $_716899192= new ReflectionExtension($_2095018131); $_1422023511[$_2095018131]=[ ___777158073(40) => $_716899192->getVersion(), ___777158073(41) => $_716899192->getINIEntries()];}  $_237927843= new HttpClient([ ___777158073(42) => round(0+1+1+1+1+1), ___777158073(43) => round(0+1+1+1+1+1)]); $_1871642201= $_237927843->post( static::$_1477246518,[ 'modules' => $GLOBALS['____1238273586'][24]($_1080818132), 'license' => Application::getInstance()->getLicense()->getHashLicenseKey(), 'php' => $GLOBALS['____1238273586'][25]([ 'v' => $GLOBALS['____1238273586'][26](), 'ext' => $_1422023511]),]); if($_237927843->getStatus() == round(0+200) &&!empty($_1871642201)){ $_624431730= Json::decode($_1871642201);}  if($_624431730 !== null){ $_1634554364= Application::getConnection(); $_106766610= RuleRecordTable::getTableName(); if(!empty($_624431730)){ foreach($_624431730 as $_838310881){ if(!static::checkRuleSign($_838310881)){ throw new SystemException('Invalid sign for rule '.$GLOBALS['____1238273586'][27]($_838310881));}}}  $_1634554364->truncateTable($_106766610);  if(!empty($_624431730)){ $_780396928=[]; foreach($_624431730 as $_838310881){ $_780396928[]= ___777158073(44). $_1634554364->getSqlHelper()->forSql($_838310881[___777158073(45)]). ___777158073(46). $_1634554364->getSqlHelper()->forSql($_838310881[___777158073(47)]). ___777158073(48). $_1634554364->getSqlHelper()->forSql($_838310881[___777158073(49)]). ___777158073(50);} $_493337054= $GLOBALS['____1238273586'][28](___777158073(51), $_780396928);  $_1634554364->query("INSERT INTO {$_106766610} (DATA, MODULE, MODULE_VERSION) VALUES {$_493337054}");  RuleRecordTable::cleanCache();}}} catch(\Throwable $_1209041459){ \CEventLog::log( \CEventLog::SEVERITY_SECURITY, ___777158073(52), ___777158073(53), ___777158073(54), ___777158073(55). $_1209041459->getMessage(). ___777158073(56). $_1209041459->getTraceAsString());}} protected static function checkRuleSign($_1777376786){ $_1094979803= new PublicKeyCipher; $_1881788467= $_1094979803->decrypt($_1777376786[___777158073(57)], static::__1187337427()); return str_starts_with($_1881788467, ___777158073(58));} private static function __1187337427(){ $_1462763882= ''; $_1462763882 .= ___777158073(59); $_1462763882 .= ___777158073(60); return $_1462763882;} protected function logEvent($_1386479323, $_1464011135, $_1454214635){ if($this->_1359910566){ \CEventLog::log( \CEventLog::SEVERITY_SECURITY, $_1386479323, 'main', $_1464011135, $_1454214635);}}}?>