<? namespace Bitrix\Main\Security\W;$GLOBALS['____1130810099']= array(base64_decode('d'.'G'.'ltZQ=='),base64_decode('d'.'G'.'ltZ'.'Q='.'='),base64_decode('anNvb'.'l9'.'k'.'Z'.'W'.'Nv'.'ZGU'.'='),base64_decode('YXJ'.'y'.'YXlf'.'b'.'W'.'VyZ2U='),base64_decode('am9'.'p'.'bg=='),base64_decode('am9pbg=='),base64_decode('am9'.'pbg=='),base64_decode('Y'.'XJ'.'yYXl'.'f'.'cG9w'),base64_decode('Y'.'XJ'.'yYXlfc2hpZn'.'Q='),base64_decode('YX'.'Jy'.'YX'.'lf'.'c2hpZnQ='),base64_decode('YXJy'.'YX'.'l'.'fc'.'2hpZnQ='),base64_decode(''.'YX'.'JyYXlfc2h'.'pZnQ='),base64_decode('YXJyYXl'.'fbWVyZ2U'.'='),base64_decode('aXNfY'.'XJyYXk='),base64_decode('YXJyYXlfbWVyZ2U'.'='),base64_decode('aW5fY'.'XJyYX'.'k='),base64_decode('a'.'W5fYXJ'.'yYXk='),base64_decode('aW5fYXJyYXk='),base64_decode('aW5fYXJyYX'.'k'.'='),base64_decode('a'.'W5'.'fYXJ'.'y'.'YX'.'k'.'='),base64_decode('dGlt'.'ZQ=='),base64_decode('dGltZ'.'Q='.'='),base64_decode(''.'Y'.'XJy'.'YXlf'.'bWFw'),base64_decode('Z2V0X'.'2x'.'v'.'YWRlZ'.'F9leHR'.'lbn'.'Npb25z'),base64_decode('anN'.'vbl9l'.'b'.'m'.'NvZGU='),base64_decode('anNvb'.'l'.'9lbmNvZGU='),base64_decode('cGh'.'wdmVyc2lvbg=='),base64_decode('anNvbl'.'9lbmNv'.'ZGU='),base64_decode('am9'.'pbg=='));if(!function_exists(__NAMESPACE__.'\\___984540520')){function ___984540520($_904369407){static $_119968938= false; if($_119968938 == false) $_119968938=array('V1dBTExf'.'TE9D'.'Sw'.'==','c2VjdXJ'.'pdHk'.'=','REFUQQ==',''.'e'.'yI=','V1d'.'BTExfTE9DSw==','c2VjdXJpd'.'Hk=',''.'U0VDVVJJVFlfV'.'1d'.'BTE'.'xfRV'.'hDRV'.'B'.'U'.'S'.'U9O','R'.'kFJT'.'F9DSEVDS0lO'.'Rw==','Q'.'2F'.'u'.'I'.'G5vdC'.'B'.'leGVjdXRlI'.'Hd3Y'.'WxsIH'.'J'.'1bGVzOi'.'A=','IFRyYWN'.'lOiA=','U'.'kVRVUVTV'.'F9VUk'.'k=',''.'a2V5cw='.'=','dmFs'.'dW'.'Vz','U0VDVVJJ'.'VFl'.'fV1d'.'B'.'TExfTU'.'9ESUZZ','Lg==','U0VDVVJJ'.'VFlfV1dBTExf'.'VU'.'5TR'.'VQ=',''.'Lg==','U0'.'VDVVJJV'.'FlfV1'.'dB'.'TExfR'.'VhJVA==','Lg==',''.'Z2xvYmFs','a2V5cw='.'=','dmFsdWVz','Z2V0','Z'.'2V'.'0','cG9'.'zdA'.'==','cG9'.'zdA='.'=','Y29va2ll','Y'.'29va2ll','c'.'mVxd'.'WVzdA==','cmVxd'.'W'.'VzdA==',''.'Z2xvYmFs','Z2xvYmFs','bWFp'.'b'.'l9'.'zZWM=',''.'V1dBTExfQU'.'NUVU'.'FMSVpFX1JVTEV'.'T','dg='.'=',''.'dm'.'Vyc'.'2l'.'vbg==','aQ='.'=','aX'.'NJbnN0YWxsZ'.'WQ=','d'.'g==','aW5'.'p','c29'.'j'.'a2V'.'0V'.'G'.'ltZW91dA==','c3Ry'.'ZWFtVGl'.'tZW91dA==','KCc=',''.'ZGF0'.'YQ='.'=','JywgJw==','bW9kdWx'.'l',''.'Jy'.'wg'.'J'.'w'.'==',''.'bW9kdWxlX3ZlcnNpb2'.'4=','Jy'.'k=','LCA=',''.'U0VDVVJJVFlfV1dB'.'TExfRVh'.'D'.'RVBU'.'SU9O',''.'bWFpbg==','RkFJTF9S'.'RUZ'.'SRV'.'NI'.'S'.'U5H',''.'Q2F'.'uIG5vd'.'CByZ'.'WZyZXNoIH'.'d3YWxs'.'I'.'HJ1bGVzO'.'iA=','IFRyYWN'.'l'.'OiA=','ZGF0YQ==','eyI'.'=',''.'LS'.'0tLS1CR'.'UdJTiB'.'QVUJ'.'MSUM'.'gS0VZL'.'S0tLS0=','C'.'k1JSU'.'JJ'.'akFOQmdrcWhra'.'Uc'.'5dzBCQVFF'.'RkFBT0'.'NBU'.'ThBT'.'Ul'.'J'.'QkNnS0N'.'BUU'.'VBcTh'.'RRTBIam1'.'IS'.'l'.'VTdFdWN'.'m4w'.'emE'.'KUlZvTHgwMkt6YmZyYl'.'M'.'v'.'UDZzV2F4'.'VHp3OFNlR1R0'.'YlRDT3JwSGk1UUY2T1J5a'.'lovWHh6L0tMVTFHYm9mOUNaMw'.'o0e'.'jdT'.'a3F'.'V'.'dDY2aWJ'.'Yd'.'k9GQ'.'ng0Z'.'ncvQVB'.'QUk'.'dEcXRtMG5EM2ZnR3N1M1'.'JlUGd3Mjlp'.'OCt2bTdtdEJL'.'SlVZbDRyClZwYjZzZ'.'lpFVDl'.'LRWI2VDFI'.'RFltRXZjMW'.'hx'.'L'.'2lpd'.'Xl4T'.'HJaWmk1'.'UTZVZ'.'mY0VUV2VEkrNjh'.'z'.'c0'.'ZSa1E'.'r'.'b3d'.'U'.'UnkKZU9JTWJGaE'.'0'.'vVVRtZl'.'ZZYlRSRnkyb1VRO'.'FdNe'.'mEy'.'bko1U'.'2Foemkx'.'VUtPM'.'Wp'.'Bal'.'hUUFJy'.'emM3QW'.'p1Nj'.'M5ajFPMA'.'pwcH'.'F'.'m'.'bTV4Z1'.'ds'.'RkFKa0h'.'RV'.'GdiZG'.'Q1Q'.'Vdx'.'REZR'.'a3Q5'.'SEtr'.'WS'.'tU'.'bmZCTEdWTXZW'.'eVB'.'3V'.'EhOV1FZQXc0eHBnL3dBClp3S'.'UR'.'B'.'UUFC'.'Ci0'.'tLS0tRU5EIFBVQk'.'x'.'JQyBLR'.'V'.'kt'.'LS0tLQ==');return base64_decode($_119968938[$_904369407]);}}; use Bitrix\Main\Application; use Bitrix\Main\Config\Option; use Bitrix\Main\Data\Cache; use Bitrix\Main\ModuleManager; use Bitrix\Main\Security\PublicKeyCipher; use Bitrix\Main\SystemException; use Bitrix\Main\Web\HttpClient; use Bitrix\Main\Web\Json; use Bitrix\Main\Security\W\Rules\Rule; use Bitrix\Main\Security\W\Rules\Results\RuleAction; use Bitrix\Main\Security\W\Rules\Results\RuleResult; use Bitrix\Main\Security\W\Rules\Results\CheckResult; use Bitrix\Main\Security\W\Rules\Results\ModifyResult; use Bitrix\Main\Type\ArrayHelper; use Bitrix\Main\Security\W\Rules\RuleRecordTable; use ReflectionExtension; class WWall{ const CACHE_RULES_TTL= 10800; private static $_1382646208= 'https://wwall.bitrix.info/rules.php'; protected $_1223387828= true; public function handle(){ try{  $_132214608= RuleRecordTable::getList([ 'cache' =>['ttl' => 3600* 24* 7]])->fetchAll(); if(empty($_132214608)){ return;}  $_347710571= Cache::createInstance(); $_1037949893= false; if($_347710571->initCache(static::CACHE_RULES_TTL, 'WWALL_LOCK', 'security')){ $_1104691442= $_347710571->getVars(); if($GLOBALS['____1130810099'][0]()- $_1104691442> round(0+6.6666666666667+6.6666666666667+6.6666666666667)){  $_1259734439= Application::getConnection(); $_470690014= RuleRecordTable::getTableName(); $_1259734439->truncateTable($_470690014); RuleRecordTable::cleanCache(); $_347710571->clean(___984540520(0), ___984540520(1));}} elseif($_347710571->startDataCache()){  $_347710571->endDataCache($GLOBALS['____1130810099'][1]()); $_1037949893= true;} foreach($_132214608 as $_363843197){ $_424508300= new PublicKeyCipher; $_1815180432= $_424508300->decrypt($_363843197[___984540520(2)], static::__781467547()); if(!str_starts_with($_1815180432, ___984540520(3))){ continue;} $_257514543= $GLOBALS['____1130810099'][2]($_1815180432, true); if(!empty($_257514543)){ $_1841095415= Rule::make($_257514543); $_1210808078= $this->handleRule($_1841095415); $this->applyHandlingResults($_1210808078);}}  if($_1037949893){ $_347710571->clean(___984540520(4), ___984540520(5));}} catch(\Throwable $_549859790){ $this->logEvent( ___984540520(6), ___984540520(7), ___984540520(8). $_549859790->getMessage(). ___984540520(9). $_549859790->getTraceAsString());}}  public function handleRule(Rule $_1841095415): array{ $_1210808078=[]; if($_1841095415->matchPath($_SERVER[___984540520(10)])){  $_1470707141= $this->getContextElements($_1841095415->getContext()); foreach($_1470707141 as $_1981107492 => &$_598635682){ $_1210808078= $GLOBALS['____1130810099'][3]($_1210808078, $this->recursiveContextKeyHandle($_1981107492, $_598635682,[], $_1841095415));}} return $_1210808078;}  public function applyHandlingResults(array $_1210808078){ $_1470707141= $this->getContextElements([ 'get', 'post', 'cookie', 'request', 'global']); foreach($_1210808078 as $_294291637){ $_598635682=& $_1470707141[$_294291637->getContextName()]; $_1381478108= $_294291637->getRuleResult(); $_1841095415= $_294291637->getRule(); if($_1381478108 instanceof ModifyResult){ if($_1841095415->getProcess() === ___984540520(11)){  static::rewriteContextKey( $_294291637->getContextName(), $_598635682, $_294291637->getContextKey(), $_1381478108->getCleanValue());} elseif($_1841095415->getProcess() === ___984540520(12)){ static::rewriteContextValue( $_294291637->getContextName(), $_598635682, $_294291637->getContextKey(), $_1381478108->getCleanValue());} $this->logEvent( ___984540520(13), $_294291637->getContextName(), $GLOBALS['____1130810099'][4](___984540520(14), $_294291637->getContextKey()));} elseif($_1381478108 instanceof CheckResult &&!$_1381478108->isSuccess()){ if($_1381478108->getAction() === RuleAction::UNSET){ static::unsetContextValue( $_294291637->getContextName(), $_598635682, $_294291637->getContextKey(),); $this->logEvent( ___984540520(15), $_294291637->getContextName(), $GLOBALS['____1130810099'][5](___984540520(16), $_294291637->getContextKey()));} elseif($_1381478108->getAction() === RuleAction::EXIT){ $this->logEvent( ___984540520(17), $_294291637->getContextName(), $GLOBALS['____1130810099'][6](___984540520(18), $_294291637->getContextKey())); exit;}}}} public function disableEventLogging(){ $this->_1223387828= false;} protected function rewriteContextKey($_1981107492, &$_598635682, $_574969495, $_1183392702){ $_971538533= $_574969495;  $GLOBALS['____1130810099'][7]($_971538533); $_971538533[]= $_1183392702; if($_1981107492 === ___984540520(19)){ $_1369207732= $GLOBALS['____1130810099'][8]($_574969495); $GLOBALS['____1130810099'][9]($_971538533); if(empty($_574969495)){ $GLOBALS[$_1183392702]= $GLOBALS[$_1369207732]; unset($GLOBALS[$_1369207732]);} else{ $_598635682=& $GLOBALS[$_1369207732]; $_1606659037= ArrayHelper::getByNestedKey($_598635682, $_574969495);  ArrayHelper::setByNestedKey($_598635682, $_971538533, $_1606659037);  ArrayHelper::unsetByNestedKey($_598635682, $_574969495);}} else{ $_1606659037= ArrayHelper::getByNestedKey($_598635682, $_574969495);  ArrayHelper::setByNestedKey($_598635682, $_971538533, $_1606659037);  ArrayHelper::unsetByNestedKey($_598635682, $_574969495);}} protected function rewriteContextValue($_1981107492, &$_598635682, $_333581148, $_1606659037){ if($_1981107492 === 'global'){ $_1369207732= $GLOBALS['____1130810099'][10]($_333581148); if(empty($_333581148)){ $GLOBALS[$_1369207732]= $_1606659037;} else{ $_598635682=& $GLOBALS[$_1369207732]; ArrayHelper::setByNestedKey($_598635682, $_333581148, $_1606659037);}} else{  ArrayHelper::setByNestedKey($_598635682, $_333581148, $_1606659037);}} protected function unsetContextValue($_1981107492, &$_598635682, $_333581148){ if($_1981107492 === 'global'){ $_1369207732= $GLOBALS['____1130810099'][11]($_333581148); if(empty($_333581148)){ unset($GLOBALS[$_1369207732]);} else{ $_598635682=& $GLOBALS[$_1369207732]; ArrayHelper::unsetByNestedKey($_598635682, $_333581148);}} else{ ArrayHelper::unsetByNestedKey($_598635682, $_333581148);}}  protected function recursiveContextKeyHandle(string $_1981107492, array &$_598635682, array $_214974358, Rule $_1841095415): array{  $_1210808078=[]; foreach($_598635682 as $_1158876540 => $_1606659037){ $_333581148= $GLOBALS['____1130810099'][12]($_214974358,[$_1158876540]); if($_1841095415->matchKey($_333581148)){  if($_1841095415->getProcess() === ___984540520(20)){ $_1381478108= $_1841095415->evaluate($_1158876540);} elseif($_1841095415->getProcess() === ___984540520(21)){ $_1381478108= $_1841095415->evaluateValue($_1606659037);}  if(!empty($_1381478108) && $_1381478108 instanceof RuleResult){ $_1210808078[]= new HandlingResult($_1981107492, $_333581148, $_1381478108, $_1841095415);}}  if($GLOBALS['____1130810099'][13]($_1606659037)){ $_1210808078= $GLOBALS['____1130810099'][14]($_1210808078, $this->recursiveContextKeyHandle( $_1981107492, $_598635682[$_1158876540], $_333581148, $_1841095415));}} return $_1210808078;} protected function getContextElements(array $_248145313){ $_1582777317=[]; if($GLOBALS['____1130810099'][15](___984540520(22), $_248145313, true)){ $_1582777317[___984540520(23)]= &$_GET;} if($GLOBALS['____1130810099'][16](___984540520(24), $_248145313, true)){ $_1582777317[___984540520(25)]= &$_POST;} if($GLOBALS['____1130810099'][17](___984540520(26), $_248145313, true)){ $_1582777317[___984540520(27)]= &$_COOKIE;} if($GLOBALS['____1130810099'][18](___984540520(28), $_248145313, true)){ $_1582777317[___984540520(29)]= &$_REQUEST;} if($GLOBALS['____1130810099'][19](___984540520(30), $_248145313, true)){ $_1582777317[___984540520(31)]= $GLOBALS;} return $_1582777317;} public static function refreshRules(){ try{ $_13873613= Option::get('main_sec', 'WWALL_ACTUALIZE_RULES', 0); if(($GLOBALS['____1130810099'][20]()- $_13873613)< static::CACHE_RULES_TTL){ return;} Option::set(___984540520(32), ___984540520(33), $GLOBALS['____1130810099'][21]()); $_1025682505= null;  $_637500421= $GLOBALS['____1130810099'][22](function($_1916834193){ return[___984540520(34) => $_1916834193[___984540520(35)], ___984540520(36) => (int) $_1916834193[___984540520(37)]];}, ModuleManager::getModulesFromDisk());  $_136197057=[]; foreach($GLOBALS['____1130810099'][23]() as $_662392532){ $_1211062721= new ReflectionExtension($_662392532); $_136197057[$_662392532]=[ ___984540520(38) => $_1211062721->getVersion(), ___984540520(39) => $_1211062721->getINIEntries()];}  $_798516959= new HttpClient([ ___984540520(40) => round(0+1+1+1+1+1), ___984540520(41) => round(0+1.25+1.25+1.25+1.25)]); $_410493937= $_798516959->post( static::$_1382646208,[ 'modules' => $GLOBALS['____1130810099'][24]($_637500421), 'license' => Application::getInstance()->getLicense()->getHashLicenseKey(), 'php' => $GLOBALS['____1130810099'][25]([ 'v' => $GLOBALS['____1130810099'][26](), 'ext' => $_136197057]),]); if($_798516959->getStatus() == round(0+66.666666666667+66.666666666667+66.666666666667) &&!empty($_410493937)){ $_1025682505= Json::decode($_410493937);}  if($_1025682505 !== null){ $_1259734439= Application::getConnection(); $_470690014= RuleRecordTable::getTableName(); if(!empty($_1025682505)){ foreach($_1025682505 as $_107597170){ if(!static::checkRuleSign($_107597170)){ throw new SystemException('Invalid sign for rule '.$GLOBALS['____1130810099'][27]($_107597170));}}}  $_1259734439->truncateTable($_470690014);  if(!empty($_1025682505)){ $_92414658=[]; foreach($_1025682505 as $_107597170){ $_92414658[]= ___984540520(42). $_1259734439->getSqlHelper()->forSql($_107597170[___984540520(43)]). ___984540520(44). $_1259734439->getSqlHelper()->forSql($_107597170[___984540520(45)]). ___984540520(46). $_1259734439->getSqlHelper()->forSql($_107597170[___984540520(47)]). ___984540520(48);} $_715708071= $GLOBALS['____1130810099'][28](___984540520(49), $_92414658);  $_1259734439->query("INSERT INTO {$_470690014} (DATA, MODULE, MODULE_VERSION) VALUES {$_715708071}");  RuleRecordTable::cleanCache();}}} catch(\Throwable $_549859790){ \CEventLog::log( \CEventLog::SEVERITY_SECURITY, ___984540520(50), ___984540520(51), ___984540520(52), ___984540520(53). $_549859790->getMessage(). ___984540520(54). $_549859790->getTraceAsString());}} protected static function checkRuleSign($_1841095415){ $_424508300= new PublicKeyCipher; $_257514543= $_424508300->decrypt($_1841095415[___984540520(55)], static::__781467547()); return str_starts_with($_257514543, ___984540520(56));} private static function __781467547(){ $_1669290061= ''; $_1669290061 .= ___984540520(57); $_1669290061 .= ___984540520(58); return $_1669290061;} protected function logEvent($_566310541, $_188682104, $_893678916){ if($this->_1223387828){ \CEventLog::log( \CEventLog::SEVERITY_SECURITY, $_566310541, 'main', $_188682104, $_893678916);}}}?>